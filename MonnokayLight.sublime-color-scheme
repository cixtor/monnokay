{
	"name": "Monnokay",
	"author": "cixtor",
	"origin": "https://github.com/cixtor/monnokay",
	"globals": {
		"active_guide": "#9d550fb0",
		"background": "#ffffff",
		"bracket_contents_foreground": "#f8f8f2a5",
		"bracket_contents_options": "underline",
		"brackets_foreground": "#f8f8f2a5",
		"brackets_options": "underline",
		"caret": "#518bff",
		"find_highlight": "#ffe792",
		"find_highlight_foreground": "#000000",
		"foreground": "#50555c",
		"invisibles": "#e8e8e8",
		"line_highlight": "#f2f1f4",
		"misspelling": "#f92672",
		"selection": "#b2d8ff",
		"selection_border": "#b2d8ff",
		"tags_options": "stippled_underline"
	},
	"rules": [
		{
			"name": "String",
			"scope": "string",
			"foreground": "#98c379"
		},
		{
			"name": "Comment",
			"scope": "comment",
			"foreground": "#b2b2b2",
			"font_style": "italic"
		},
		{
			"name": "Single comments",
			"scope": "comment.line"
		},
		{
			"name": "Multi-line comments",
			"scope": "comment.block"
		},
		{
			"name": "Multi-line comments used as documentation, such as Javadoc or PhpDoc",
			"scope": "comment.block.documentation"
		},
		{
			"name": "Symbols that delineate a comment, e.g. // or /*",
			"scope": "punctuation.definition.comment"
		},
		{
			"name": "Comments with special syntax that denote a section of code",
			"scope": "meta.toc-list"
		},
		{
			"name": "Diff header",
			"scope": "meta.diff",
			"foreground": "#75715E"
		},
		{
			"name": "Diff header",
			"scope": "meta.diff.header",
			"foreground": "#75715E"
		},
		{
			"name": "Numeric literal",
			"scope": "constant.numeric",
			"foreground": "#e0bc14"
		},
		{
			"name": "Numeric literal for integers",
			"scope": "constant.numeric.integer"
		},
		{
			"name": "Numeric literal for floating points",
			"scope": "constant.numeric.float"
		},
		{
			"name": "Numeric literal in octal representation",
			"scope": "constant.numeric.octal"
		},
		{
			"name": "Numeric literal in hexadecimal representation",
			"scope": "constant.numeric.hex"
		},
		{
			"name": "Constants that are built into the language, such as booleans and null values",
			"scope": "constant.language",
			"foreground": "#db6a73"
		},
		{
			"name": "User-defined constant",
			"scope": "constant.character",
			"foreground": "#AE81FF"
		},
		{
			"name": "Character escapes in strings, e.g. \\n and \\x20",
			"scope": "constant.character.escape",
			"foreground": "#57b6c2",
			"font_style": "bold"
		},
		{
			"name": "Formatting placeholders, such as those used for sprintf(), e.g. %s",
			"scope": "constant.other.placeholder",
			"font_style": "bold"
		},
		{
			"name": "Other language-specific constant values, such as symbols in Ruby",
			"scope": "constant.other",
			"foreground": "#d09965"
		},
		{
			"name": "Class name",
			"scope": "entity.name.class",
			"foreground": "#e1bd7a"
		},
		{
			"name": "Struct name",
			"scope": "entity.name.struct"
		},
		{
			"name": "Enum name",
			"scope": "entity.name.enum"
		},
		{
			"name": "Union name",
			"scope": "entity.name.union"
		},
		{
			"name": "Trait name",
			"scope": "entity.name.trait"
		},
		{
			"name": "Interface name",
			"scope": "entity.name.interface"
		},
		{
			"name": "Type name",
			"scope": "entity.name.type",
			"foreground": "#e1bd7a"
		},
		{
			"name": "Class, interface and trait names listed as an inherited class or implemented interface/trait",
			"scope": "entity.other.inherited-class",
			"foreground": "#98c379"
		},
		{
			"name": "Filename",
			"scope": "entity.name.filename",
			"foreground": "#E6DB74"
		},
		{
			"name": "Function names included in the symbol list and index",
			"scope": "entity.name.function",
			"foreground": "#61afef",
			"font_style": "bold"
		},
		{
			"name": "Function names included in the symbol list and index",
			"scope": "entity.name.function.constructor"
		},
		{
			"name": "Function names included in the symbol list and index",
			"scope": "entity.name.function.destructor"
		},
		{
			"name": "Namespaces, packages and modules use the following scope",
			"scope": "entity.name.namespace",
			"foreground": "#e0bc14",
			"font_style": "bold"
		},
		{
			"name": "Namespaces, packages and modules use the following scope",
			"scope": "support.other.namespace",
			"foreground": "#e0bc14"
		},
		{
			"name": "Constants included in the symbol list and index",
			"scope": "entity.name.constant"
		},
		{
			"name": "Labels for goto-like constructs",
			"scope": "entity.name.label",
			"foreground": "#ff0000",
			"font_style": "bold"
		},
		{
			"name": "Heading names in markup languages, such as Markdown and Textile",
			"scope": "entity.name.section"
		},
		{
			"name": "HTML and XML tags should use the following scope",
			"scope": "entity.name.tag",
			"foreground": "#F92672"
		},
		{
			"name": "HTML, CSS and XML use the following for tag attribute names",
			"scope": "entity.other.attribute-name",
			"foreground": "#A6E22E"
		},
		{
			"name": "Elements that are illegal in a specific context",
			"scope": "invalid.illegal"
		},
		{
			"name": "Deprecated elements",
			"scope": "invalid.deprecated",
			"background": "#AE81FF",
			"foreground": "#F8F8F0"
		},
		{
			"name": "Control keywords examples include if, try, end and while",
			"scope": "keyword.control"
		},
		{
			"name": "Some syntaxes prefer to mark if and else with the conditional variant",
			"scope": "keyword.control.conditional"
		},
		{
			"name": "The import variant is often used in appropriate situations",
			"scope": "keyword.control.import"
		},
		{
			"name": "Keywords that contain punctuation, such as the @ symbol in CSS",
			"scope": "punctuation.definition.keyword"
		},
		{
			"name": "Keyword",
			"scope": "keyword - (source.c keyword.operator | source.c++ keyword.operator | source.objc keyword.operator | source.objc++ keyword.operator), keyword.operator.word",
			"foreground": "#c678dd"
		},
		{
			"name": "Symbols for general operations",
			"scope": "keyword.operator",
			"foreground": "#abb2bf"
		},
		{
			"name": "Symbols for assignment operations",
			"scope": "keyword.operator.assignment",
			"foreground": "#abb2bf"
		},
		{
			"name": "Symbols for arithmetic operations",
			"scope": "keyword.operator.arithmetic"
		},
		{
			"name": "Symbols for bitwise operations",
			"scope": "keyword.operator.bitwise"
		},
		{
			"name": "Symbols for logical operations",
			"scope": "keyword.operator.logical",
			"foreground": "#abb2bf"
		},
		{
			"name": "Symbols for logical operations",
			"scope": "keyword.operator.comparison",
			"foreground": "#abb2bf"
		},
		{
			"name": "When the operator is a word, such as and, or or not",
			"scope": "keyword.operator.word"
		},
		{
			"name": "All remaining non-operator keywords",
			"scope": "keyword.other"
		},
		{
			"name": "PhpDoc keywords",
			"scope": "keyword.other.phpdoc",
			"foreground": "#7f7e80",
			"font_style": "bold italic"
		},
		{
			"name": "Section headings for content, Markdown and Textile",
			"scope": "markup.heading",
			"foreground": "#ff9200",
			"font_style": "bold"
		},
		{
			"name": "markup h1",
			"scope": "markup.heading.1",
			"foreground": "#fd9855"
		},
		{
			"name": "markup h2",
			"scope": "markup.heading.2",
			"foreground": "#fc8032"
		},
		{
			"name": "markup h3",
			"scope": "markup.heading.3",
			"foreground": "#fc5f32"
		},
		{
			"name": "markup h4",
			"scope": "markup.heading.4",
			"foreground": "#fb4035"
		},
		{
			"name": "markup h5",
			"scope": "markup.heading.5",
			"foreground": "#9e2442"
		},
		{
			"name": "markup h6",
			"scope": "markup.heading.6",
			"foreground": "#360e2a"
		},
		{
			"name": "Numbered list",
			"scope": "markup.list.numbered"
		},
		{
			"name": "Markup bullets",
			"scope": "markup.list.numbered.bullet",
			"foreground": "#ae81ff",
			"font_style": "bold"
		},
		{
			"name": "Unnumbered list",
			"scope": "markup.list.unnumbered"
		},
		{
			"name": "markup bullets",
			"scope": "markup.list.unnumbered.bullet",
			"foreground": "#ae81ff",
			"font_style": "bold"
		},
		{
			"name": "Basic bold text styling",
			"scope": "markup.bold",
			"foreground": "#c6d1e3",
			"font_style": "bold"
		},
		{
			"name": "Basic italic text styling",
			"scope": "markup.italic",
			"foreground": "#707780",
			"font_style": "italic"
		},
		{
			"name": "markup bold/italic",
			"scope": "markup.italic markup.bold | markup.bold markup.italic",
			"font_style": "bold italic"
		},
		{
			"name": "Basic underline text styling",
			"scope": "markup.underline"
		},
		{
			"name": "Inserted content, such as with diff output",
			"scope": "markup.inserted",
			"foreground": "#a6e22e"
		},
		{
			"name": "Changed content, such as with diff output",
			"scope": "markup.changed",
			"foreground": "#e6db74"
		},
		{
			"name": "Deleted content, such as with diff output",
			"scope": "markup.deleted",
			"foreground": "#f92672"
		},
		{
			"name": "Links",
			"scope": "markup.underline.link",
			"foreground": "#007582"
		},
		{
			"name": "Links",
			"scope": "meta.link.inline.markdown",
			"foreground": "#00adc0"
		},
		{
			"name": "Links",
			"scope": "meta.link.inline.description.markdown",
			"foreground": "#00adc0",
			"font_style": "italic"
		},
		{
			"name": "Links",
			"scope": "meta.image.inline.markdown",
			"foreground": "#00adc0"
		},
		{
			"name": "Links",
			"scope": "meta.image.inline.description.markdown",
			"foreground": "#00adc0",
			"font_style": "italic"
		},
		{
			"name": "Blockquotes and other quote styles",
			"scope": "markup.quote"
		},
		{
			"name": "Literal quoting, often used for code",
			"scope": "markup.raw",
			"background": "#F8F8F818"
		},
		{
			"name": "Inline literal quoting, often used for code",
			"scope": "markup.raw.inline"
		},
		{
			"name": "Block literal quoting, often used for code",
			"scope": "markup.raw.block"
		},
		{
			"name": "markup punctuation",
			"scope": "markup.raw punctuation.definition.raw",
			"foreground": "#F8F8F8AA"
		},
		{
			"name": "Other markup, including constructs such as footnotes and tables",
			"scope": "markup.other"
		},
		{
			"name": "markup blockquote",
			"scope": "markup.quote punctuation.definition.blockquote",
			"foreground": "#75715E"
		},
		{
			"name": "Separators such as commas and colons",
			"scope": "punctuation.separator"
		},
		{
			"name": "Semicolons or other statement terminators",
			"scope": "punctuation.terminator"
		},
		{
			"name": "Line-continuation characters, such as in Python and R",
			"scope": "punctuation.separator.continuation"
		},
		{
			"name": "Member access, scope resolution, or similar constructs including the dot symbol, single-hyphen arrow and double-colon symbol",
			"scope": "punctuation.accessor"
		},
		{
			"name": "Storage",
			"scope": "storage",
			"foreground": "#F92672"
		},
		{
			"name": "Types and definition/declaration keywords should use the following scope. Examples include int, bool, char, func, function, class and def",
			"scope": "storage.type",
			"foreground": "#c678dd",
			"font_style": "italic"
		},
		{
			"name": "Keywords that affect the storage of a variable, function or data structure should use the following scope. Examples include static, inline, const, public and private",
			"scope": "storage.modifier",
			"foreground": "#ff0071",
			"font_style": "italic"
		},
		{
			"name": "Basic strings between single quotes",
			"scope": "string.quoted.single"
		},
		{
			"name": "Basic strings between double quotes",
			"scope": "string.quoted.double"
		},
		{
			"name": "Basic strings between triple quotes",
			"scope": "string.quoted.triple"
		},
		{
			"name": "Strings that used unconventional quotes, such as lower-than and greater-than with C imports",
			"scope": "string.quoted.other"
		},
		{
			"name": "Punctuation at the beginning of strings",
			"scope": "punctuation.definition.string.begin"
		},
		{
			"name": "Punctuation at the end of strings",
			"scope": "punctuation.definition.string.end"
		},
		{
			"name": "Unquoted strings, such as in Shell and Batch File",
			"scope": "string.unquoted"
		},
		{
			"name": "Unquoted YAML string",
			"scope": "string.unquoted.yaml",
			"foreground": "#F8F8F2"
		},
		{
			"name": "Regular expression literals",
			"scope": "string.regexp"
		},
		{
			"name": "Elements provided by a base framework should use one of the following scopes. Examples include Cocoa within Objective-C, or the browser/Node within JavaScript",
			"scope": "support.constant",
			"foreground": "#e1bd7a"
		},
		{
			"name": "Elements provided by a base framework. Examples include Cocoa within Objective-C, or the browser/Node within JavaScript",
			"scope": "support.function",
			"foreground": "#57b6c2"
		},
		{
			"name": "Library function",
			"scope": "support.macro",
			"foreground": "#66D9EF"
		},
		{
			"name": "Elements provided by a base framework should use one of the following scopes. Examples include Cocoa within Objective-C, or the browser/Node within JavaScript",
			"scope": "support.module"
		},
		{
			"name": "While also used for base frameworks, many syntaxes apply these to scopes unrecognized classes and types, effectively scoping all user constructs",
			"scope": "support.type",
			"foreground": "#66D9EF",
			"font_style": "italic"
		},
		{
			"name": "While also used for base frameworks, many syntaxes apply these to scopes unrecognized classes and types, effectively scoping all user constructs",
			"scope": "support.class",
			"foreground": "#e1bd7a",
			"font_style": "italic"
		},
		{
			"name": "Library variable",
			"scope": "support.other.variable"
		},
		{
			"name": "A generic variable",
			"scope": "variable.other"
		},
		{
			"name": "Some languages use the readwrite variant for contrast with the constant variant",
			"scope": "variable.other.readwrite"
		},
		{
			"name": "Symbols that are part of the variable name. For example, the dollar symbol in PHP and Shell",
			"scope": "punctuation.definition.variable"
		},
		{
			"name": "Immutable variables, often via a const modifier. Depending on the language and semantics, Entity.Name.Constant may be a better choice",
			"scope": "variable.other.constant"
		},
		{
			"name": "Reserved variable names that are specified by the language, such as this, self, super, etc",
			"scope": "variable.language",
			"foreground": "#fd971f",
			"font_style": "italic"
		},
		{
			"name": "Fields, properties, members and attributes of a class or other data structure",
			"scope": "variable.other.member"
		},
		{
			"name": "Function and method names, but only when they are being invoked. When defined, they should use entity.name.function",
			"scope": "variable.function",
			"foreground": "#57b6c2"
		},
		{
			"name": "Function call",
			"scope": "variable.annotation",
			"foreground": "#66D9EF"
		},
		{
			"name": "JavaScript Dollar",
			"scope": "variable.other.dollar.only.js",
			"foreground": "#F92672"
		},
		{
			"name": "markup hr",
			"scope": "punctuation.definition.thematic-break",
			"foreground": "#75715E"
		},
		{
			"name": "Annotation Punctuation",
			"scope": "punctuation.definition.annotation",
			"foreground": "#F92672"
		},
		{
			"name": "Punctuation section embedded variable",
			"scope": "punctuation.section.embedded",
			"foreground": "#be4f46"
		},
		{
			"name": "JSON brackets, colons and commas",
			"scope": "meta.structure.dictionary.json",
			"foreground": "#abb2bf"
		},
		{
			"name": "JSON constants",
			"scope": "constant.language.json",
			"foreground": "#db6a73"
		},
		{
			"name": "JSON dictionary key",
			"scope": "source.json meta.structure.dictionary.json meta.structure.dictionary.key.json string.quoted.double.json",
			"foreground": "#678cb1"
		},
		{
			"name": "JSON dictionary value",
			"scope": "source.json meta.structure.dictionary.json meta.structure.dictionary.value.json string.quoted.double.json",
			"foreground": "#98c379"
		},
		{
			"name": "Entity name",
			"scope": "entity.name - (entity.name.filename | entity.name.section | entity.name.tag | entity.name.label)",
			"foreground": "#A6E22E"
		},
		{
			"name": "Parameters to a function or methods. This may also be used for other parameter-like variables, such as receivers or named return values in Go",
			"scope": "variable.parameter - (source.c | source.c++ | source.objc | source.objc++)",
			"foreground": "#FD971F",
			"font_style": "italic"
		},
		{
			"name": "markup punctuation",
			"scope": "text & (punctuation.definition.italic | punctuation.definition.bold | punctuation.definition.raw | punctuation.definition.link | punctuation.definition.metadata | punctuation.definition.image | punctuation.separator.table-cell | punctuation.section.table-header | punctuation.definition.constant)",
			"foreground": "#F8F8F8AA"
		},
		{
			"name": "CSS numeric units like px, em, percentage, etc...",
			"scope": "keyword.other.unit.css",
			"foreground": "#eb7600"
		}
	]
}
